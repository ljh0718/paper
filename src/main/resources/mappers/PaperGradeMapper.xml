<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yizhidou.paper.mapper.PaperGradeMapper" >
  <resultMap id="BaseResultMap" type="com.yizhidou.paper.entity.PaperGrade" >
    <constructor >
      <idArg column="paper_grade_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="paper_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="person_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="grade_tx" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="grade_wd" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="grade" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    paper_grade_id, paper_id, person_id, grade_tx, grade_wd, grade
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yizhidou.paper.entity.PaperGradeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from paper_grade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from paper_grade
    where paper_grade_id = #{paperGradeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from paper_grade
    where paper_grade_id = #{paperGradeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yizhidou.paper.entity.PaperGradeExample" >
    delete from paper_grade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yizhidou.paper.entity.PaperGrade" >
    insert into paper_grade (paper_grade_id, paper_id, person_id, 
      grade_tx, grade_wd, grade
      )
    values (#{paperGradeId,jdbcType=INTEGER}, #{paperId,jdbcType=INTEGER}, #{personId,jdbcType=INTEGER}, 
      #{gradeTx,jdbcType=INTEGER}, #{gradeWd,jdbcType=INTEGER}, #{grade,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yizhidou.paper.entity.PaperGrade" >
    insert into paper_grade
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="paperGradeId != null" >
        paper_grade_id,
      </if>
      <if test="paperId != null" >
        paper_id,
      </if>
      <if test="personId != null" >
        person_id,
      </if>
      <if test="gradeTx != null" >
        grade_tx,
      </if>
      <if test="gradeWd != null" >
        grade_wd,
      </if>
      <if test="grade != null" >
        grade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="paperGradeId != null" >
        #{paperGradeId,jdbcType=INTEGER},
      </if>
      <if test="paperId != null" >
        #{paperId,jdbcType=INTEGER},
      </if>
      <if test="personId != null" >
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="gradeTx != null" >
        #{gradeTx,jdbcType=INTEGER},
      </if>
      <if test="gradeWd != null" >
        #{gradeWd,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yizhidou.paper.entity.PaperGradeExample" resultType="java.lang.Integer" >
    select count(*) from paper_grade
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update paper_grade
    <set >
      <if test="record.paperGradeId != null" >
        paper_grade_id = #{record.paperGradeId,jdbcType=INTEGER},
      </if>
      <if test="record.paperId != null" >
        paper_id = #{record.paperId,jdbcType=INTEGER},
      </if>
      <if test="record.personId != null" >
        person_id = #{record.personId,jdbcType=INTEGER},
      </if>
      <if test="record.gradeTx != null" >
        grade_tx = #{record.gradeTx,jdbcType=INTEGER},
      </if>
      <if test="record.gradeWd != null" >
        grade_wd = #{record.gradeWd,jdbcType=INTEGER},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update paper_grade
    set paper_grade_id = #{record.paperGradeId,jdbcType=INTEGER},
      paper_id = #{record.paperId,jdbcType=INTEGER},
      person_id = #{record.personId,jdbcType=INTEGER},
      grade_tx = #{record.gradeTx,jdbcType=INTEGER},
      grade_wd = #{record.gradeWd,jdbcType=INTEGER},
      grade = #{record.grade,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yizhidou.paper.entity.PaperGrade" >
    update paper_grade
    <set >
      <if test="paperId != null" >
        paper_id = #{paperId,jdbcType=INTEGER},
      </if>
      <if test="personId != null" >
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="gradeTx != null" >
        grade_tx = #{gradeTx,jdbcType=INTEGER},
      </if>
      <if test="gradeWd != null" >
        grade_wd = #{gradeWd,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=INTEGER},
      </if>
    </set>
    where paper_grade_id = #{paperGradeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yizhidou.paper.entity.PaperGrade" >
    update paper_grade
    set paper_id = #{paperId,jdbcType=INTEGER},
      person_id = #{personId,jdbcType=INTEGER},
      grade_tx = #{gradeTx,jdbcType=INTEGER},
      grade_wd = #{gradeWd,jdbcType=INTEGER},
      grade = #{grade,jdbcType=INTEGER}
    where paper_grade_id = #{paperGradeId,jdbcType=INTEGER}
  </update>

  <!-- int updateGradeWd(PaperGrade grade); -->
  <update id="updateGradeWd">
    UPDATE
	    paper_grade
    SET
	    grade_wd = #{gradeWd}
    WHERE
	    paper_id=#{paperId}
    AND
	    person_id=#{personId}
  </update>
</mapper>